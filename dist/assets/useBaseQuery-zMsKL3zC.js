import{c as d,E as n,r as u}from"./index-Vq1JXboX.js";import{u as y}from"./utils-bemYdGE3.js";import{u as p,a as E,e as R,b as C,c as b,s as g,f as m,g as S}from"./suspense-9ho99RMx.js";function x(a,c){const i=d({context:a.context}),t=p(),o=E(),e=i.defaultQueryOptions(a);e._optimisticResults=t?"isRestoring":"optimistic",e.onError&&(e.onError=n.batchCalls(e.onError)),e.onSuccess&&(e.onSuccess=n.batchCalls(e.onSuccess)),e.onSettled&&(e.onSettled=n.batchCalls(e.onSettled)),R(e),C(e,o),b(o);const[r]=u.useState(()=>new c(i,e)),s=r.getOptimisticResult(e);if(y(u.useCallback(l=>{const f=t?()=>{}:r.subscribe(n.batchCalls(l));return r.updateResult(),f},[r,t]),()=>r.getCurrentResult(),()=>r.getCurrentResult()),u.useEffect(()=>{r.setOptions(e,{listeners:!1})},[e,r]),g(e,s,t))throw m(e,r,o);if(S({result:s,errorResetBoundary:o,useErrorBoundary:e.useErrorBoundary,query:r.getCurrentQuery()}))throw s.error;return e.notifyOnChangeProps?s:r.trackResult(s)}export{x as u};
